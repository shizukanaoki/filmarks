

/* Create Tables */

CREATE TABLE ALBUM
(
	ALBUM_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ID',
	ALBUM_TITLE VARCHAR(200) NOT NULL COMMENT 'タイトル',
	IMAGE_FILE_NAME VARCHAR(200) NOT NULL COMMENT 'ファイル名',
	ARTIST_ID INT COMMENT 'アーティストID',
	PRIMARY KEY (ALBUM_ID)
) COMMENT = 'NEW_TABLE';


CREATE TABLE ARTIST
(
	ARTIST_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ID',
	ARTIST_NAME VARCHAR(100) NOT NULL UNIQUE COMMENT '名前',
	PRIMARY KEY (ARTIST_ID)
) COMMENT = 'NEW_TABLE';


CREATE TABLE COMMENT
(
	COMMENT_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ID',
	USER_ID INT NOT NULL COMMENT 'ユーザーID',
	ALBUM_ID INT NOT NULL COMMENT 'アルバムID',
	CONTENT TEXT NOT NULL COMMENT '内容',
	RATE FLOAT NOT NULL COMMENT 'レート',
	COMMENT_CREATED_AT DATETIME NOT NULL COMMENT '時間',
	PRIMARY KEY (COMMENT_ID)
) COMMENT = 'NEW_TABLE';


CREATE TABLE FAVORITE
(
	FAVORITE_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ID',
	USER_ID INT NOT NULL COMMENT 'ユーザーID',
	ALBUM_ID INT NOT NULL COMMENT 'アルバムID',
	FAVORITE_CREATED_AT DATETIME NOT NULL COMMENT '時間',
	PRIMARY KEY (FAVORITE_ID),
	CONSTRAINT UQ_USER_ID_AND_ALBUM_ID_ON_FAVORITE UNIQUE (USER_ID, ALBUM_ID)
) COMMENT = 'NEW_TABLE';


CREATE TABLE POST
(
	POST_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ID',
	TARGET_ID INT NOT NULL,
	TARGET_TYPE INT NOT NULL,
	USER_ID INT NOT NULL COMMENT 'ユーザーID',
	PRIMARY KEY (POST_ID)
) COMMENT = 'NEW_TABLE';


CREATE TABLE SONG
(
	SONG_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ID',
	ALBUM_ID INT NOT NULL COMMENT 'アルバムID',
	SONG_TITLE VARCHAR(200) NOT NULL COMMENT '名前',
	PRIMARY KEY (SONG_ID)
) COMMENT = 'NEW_TABLE';


CREATE TABLE USER
(
	USER_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ID',
	USERNAME VARCHAR(100) NOT NULL UNIQUE COMMENT '名前',
	PASSWORD VARCHAR(100) NOT NULL COMMENT 'パスワード',
	PRIMARY KEY (USER_ID)
) COMMENT = 'NEW_TABLE';


CREATE TABLE USER_FOLLOWING
(
	ID INT NOT NULL AUTO_INCREMENT COMMENT 'ID',
	FOLLOWING_ID INT NOT NULL COMMENT 'フォローID',
	FOLLOWER_ID INT NOT NULL COMMENT 'フォロワーID',
	PRIMARY KEY (ID),
	CONSTRAINT UQ_RELATIONSHIP_FOLLOWING_ID_AND_FOLLOWER_ID UNIQUE (FOLLOWING_ID, FOLLOWER_ID)
) COMMENT = 'NEW_TABLE';



/* Create Foreign Keys */

ALTER TABLE COMMENT
	ADD CONSTRAINT FK_COMMENT_PRODUCT FOREIGN KEY (ALBUM_ID)
	REFERENCES ALBUM (ALBUM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FAVORITE
	ADD CONSTRAINT FK_PICK_PRODUCT FOREIGN KEY (ALBUM_ID)
	REFERENCES ALBUM (ALBUM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SONG
	ADD CONSTRAINT FK_SONG_PRODUCT FOREIGN KEY (ALBUM_ID)
	REFERENCES ALBUM (ALBUM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ALBUM
	ADD CONSTRAINT FK_PRODUCT_ARTIST FOREIGN KEY (ARTIST_ID)
	REFERENCES ARTIST (ARTIST_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMENT
	ADD CONSTRAINT FK_COMMENT_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FAVORITE
	ADD CONSTRAINT FK_PICK_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE USER_FOLLOWING
	ADD CONSTRAINT FK_RELATIONSHIP_FOLLOWING FOREIGN KEY (FOLLOWING_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE USER_FOLLOWING
	ADD CONSTRAINT FK_RELATIONSHIP_FOLLOWER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



